# This file overrides the compose.yml file for running locally with dev services.

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.5.0
        profiles: ["dev"]
        env_file: env/.env.zookeeper
        networks:
            - internal
        healthcheck:
            test: nc -z localhost 2181 || exit -1
            interval: 10s
            timeout: 5s
            retries: 3

    kafka:
        image: confluentinc/cp-kafka:7.5.0
        profiles: ["dev"]
        depends_on:
            zookeeper:
                condition: service_healthy
        env_file: env/.env.kafka
        networks:
            - internal
        healthcheck:
            test: kafka-topics --bootstrap-server kafka:9092 --list
            interval: 30s
            timeout: 10s
            retries: 3
        restart: on-failure

    redis:
        image: redis:7.0-alpine
        profiles: ["dev"]
        ports:
            - "6379:6379"
        networks:
            - internal
        healthcheck:
            test: redis-cli ping
            interval: 10s
            timeout: 5s
            retries: 3
        restart: on-failure

    mongodb:
        image: mongo:7.0
        profiles: ["dev"]
        command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
        ports:
            - "27017:27017"
        env_file: env/.env.mongodb
        volumes:
            - mongo-data:/data/db
            - mongo-config:/data/configdb
        networks:
            - internal
            - external
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        restart: on-failure

    api:
        environment:
            DEV_MODE: true
            DEV_SERVICES: true
        env_file:
            - env/.env.api
        depends_on:
            kafka:
                condition: service_healthy
            redis:
                condition: service_healthy
            mongodb:
                condition: service_healthy

    agent:
        environment:
            DEV_MODE: true
            DEV_SERVICES: true
        env_file:
            - env/.env.agent
